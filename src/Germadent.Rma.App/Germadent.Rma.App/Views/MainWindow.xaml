<Window x:Class="Germadent.Rma.App.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:Germadent.UI.Controls;assembly=Germadent.UI"
        xmlns:designMock="clr-namespace:Germadent.Rma.App.Views.DesignMock"
        xmlns:viewModels="clr-namespace:Germadent.Rma.App.ViewModels"
        xmlns:helpers="clr-namespace:Germadent.UI.Helpers;assembly=Germadent.UI"
        xmlns:viewModelsCommon="clr-namespace:Germadent.Client.Common.ViewModels;assembly=Germadent.Client.Common"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        MinWidth="1024"
        Width="1200"
        MinHeight="600"
        Height="900"
        WindowStartupLocation="CenterScreen"
        Background="{x:Static SystemColors.ControlBrush}"
        d:DataContext="{d:DesignInstance Type=designMock:DesignMockMainViewModel, IsDesignTimeCreatable=True}"
        DataContextChanged="MainWindow_OnDataContextChanged"
        FocusManager.FocusedElement="{Binding ElementName=SearchComboBox}">
    <Window.Resources>
        <Style x:Key="MenuItemViewModelStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Header" Value="{Binding Header}" />
            <Setter Property="IsCheckable" Value="True"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked, Mode=TwoWay}"/>
            <Setter Property="Command" Value="{Binding Command}" />
            <Setter Property="CommandParameter" Value="{Binding Parameter}" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <!-- Контекстное меню для колонок -->
        <ContextMenu x:Key="DataGridColumnHeaderContextMenu"
                     DataContext="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                     ItemsSource="{Binding ColumnContextMenuItems}">
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemViewModelStyle}">
                    <Setter Property="StaysOpenOnClick" Value="True" />
                </Style>
            </ContextMenu.ItemContainerStyle>
        </ContextMenu>

        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
            <Setter Property="ContextMenu" Value="{StaticResource DataGridColumnHeaderContextMenu}"/>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ExitCommand}"
                    Key="F10"/>
        <KeyBinding Command="{Binding LogOutCommand}"
                    Key="L" Modifiers="Control+Alt"/>
    </Window.InputBindings>
    <Grid Margin="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Margin="-6,-6,-6,6" Grid.ColumnSpan="2">
            <MenuItem Header="Программа">
                <MenuItem Header="Зайти под другим пользователем"
                          InputGestureText="Ctrl+Alt+L"
                          Command="{Binding LogOutCommand}"/>
                <MenuItem Header="Выйти"
                          InputGestureText="F10"
                          Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Заказ-наряды">
                <MenuItem Header="Создать заказ-наряд для ЗТЛ"
                          Command="{Binding CreateLabOrderCommand}"/>
                <MenuItem Header="Создать заказ-наряд для ФЦ"
                          Command="{Binding CreateLabOrderCommand}"/>
                <Separator/>
                <MenuItem Header="Редактировать заказ-наряд"
                          InputGestureText="Enter"
                          Command="{Binding OpenOrderCommand}"/>
                <MenuItem Header="Закрыть заказ-наряд" 
                          InputGestureText="Ctrl+Shift+C"
                          Command="{Binding CloseOrderCommand}"/>
                <MenuItem Header="Распечатать заказ-наряд" 
                          InputGestureText="Ctrl+P"
                          Command="{Binding PrintOrderCommand}"/>
                <MenuItem Header="Копировать в Excel" 
                          Command="{Binding CopyOrderToClipboardCommand}"/>
            </MenuItem>
            <MenuItem Header="Справочники">
                <MenuItem Header="Заказчики" 
                          Command="{Binding ShowCustomersDictionaryCommand}"/>
                <MenuItem Header="Ответственные лица"
                          Command="{Binding ShowResponsiblePersonsDictionaryCommand}"/>
                <MenuItem Header="Прайслисты"
                          Visibility="{Binding CanViewPriceList, Converter={StaticResource BoolToVisibilityConverter}}"
                          Command="{Binding ShowPriceListEditorCommand}"/>
            </MenuItem>
        </Menu>

        <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Vertical">
            <controls:SearchComboBox x:Name="SearchComboBox" Height="23" Margin="0,0,0,0"
                                     LabelText="Поиск заказ-нарядов" 
                                     SearchEventTimeDelay="00:00:3"
                                     SearchText="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="Создание заказ-нарядов" VerticalAlignment="Center" FontSize="10" Margin="0,12,0,0"/>
            <Button Content="Лаборатория" Margin="0,6,0,0"
                    Command="{Binding CreateLabOrderCommand}"/>
            <Button Content="Фрезерный центр" Margin="0,6,0,0"
                    Command="{Binding CreateMillingCenterOrderCommand}"/>

            <TextBlock Text="Работа с заказ-нарядами" VerticalAlignment="Center" Margin="0,24,0,0" FontSize="10"/>
            <Button Content="Настроить фильтр" Margin="0,6,0,0"
                    Command="{Binding FilterOrdersCommand}"/>
            <Button Content="Редактировать З-Н" Margin="0,6,0,0"
                    Command="{Binding OpenOrderCommand}"/>
            <Button Content="Закрыть З-Н" Margin="0,6,0,0"
                    Command="{Binding CloseOrderCommand}"/>
            <Button Content="Распечатать З-Н" Margin="0,6,0,0"
                    Command="{Binding PrintOrderCommand}"/>

            <TextBlock Text="Работа со справочниками" VerticalAlignment="Center" FontSize="10" Margin="0,12,0,0"/>
            <Button Content="Заказчики" Margin="0,6,0,0"
                    Command="{Binding ShowCustomersDictionaryCommand}"/>
            <Button Content="Ответственные лица" Margin="0,6,0,0"
                    Command="{Binding ShowResponsiblePersonsDictionaryCommand}"/>
            <Button Content="Прайслисты" Margin="0,6,0,0"
                    Visibility="{Binding CanViewPriceList, Converter={StaticResource BoolToVisibilityConverter}}"
                    Command="{Binding ShowPriceListEditorCommand}"/>
            <Button Content="Технологические операции" Margin="0,6,0,0"
                    Visibility="{Binding CanViewTechnologyOperations, Converter={StaticResource BoolToVisibilityConverter}}"
                    Command="{Binding ShowTechnologyOperationsEditorCommand}"/>
        </StackPanel>

        <DataGrid x:Name="OrdersGrid" Grid.Column="1" Grid.Row="1" Margin="6,0,0,0"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                  CanUserDeleteRows="False"
                  CanUserAddRows="False"
                  CanUserReorderColumns="True"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"	
                  AlternationCount="2"
                  IsReadOnly="True"
                  ItemsSource="{Binding Orders}"
                  SelectedItem="{Binding SelectedOrder}"
                  SelectionChanged="OrdersGrid_OnSelectionChanged">
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding OpenOrderCommand}"
                            Key="Enter"/>
                <KeyBinding Command="{Binding PrintOrderCommand}"
                            Key="P" Modifiers="Control"/>
                <KeyBinding Command="{Binding CloseOrderCommand}"
                            Key="C" Modifiers="Control+Shift"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}"
                       d:DataContext="{d:DesignInstance Type={x:Type viewModelsCommon:OrderLiteViewModel}, IsDesignTimeCreatable=True}">
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="OnOrderRowDoubleClick"/>
                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=DataContext}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.Tag}">
                                <MenuItem Header="Редактировать" FontWeight="Bold" Command="{Binding OpenOrderCommand}"
                                          InputGestureText="Enter"/>
                                <MenuItem Header="Распечатать" Command="{Binding PrintOrderCommand}"
                                          InputGestureText="Ctrl+P"/>
                                <MenuItem Header="Копировать в Excel" Command="{Binding CopyOrderToClipboardCommand}"/>
                                <Separator/>
                                <MenuItem Header="Закрыть" Command="{Binding CloseOrderCommand}"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLocked}" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock>
                                        <Run Text="Заказ-наряд заблокировал пользователь "/>
                                        <Run Text="{Binding LockedBy.FullName, Mode=OneWay}"
                                             FontWeight="SemiBold"/>
                                    </TextBlock>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsClosed}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsClosed}" Value="True">
                            <Setter Property="ToolTip" Value="Данный заказ наряд закрыт, его можно открыть на просмотр или распечатать"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="Auto" 
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnIdentifier"
                                    Binding="{Binding Model.WorkOrderId}"/>
                <DataGridTextColumn Header="№" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="Auto" 
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnDocNumber"
                                    Binding="{Binding Model.DocNumber}"/>
                <DataGridTextColumn Header="Дата создания" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCreated"
                                    Binding="{Binding Model.Created, StringFormat='dd.MM.yyyy HH:mm'}"/>
                <DataGridTextColumn Header="ЗТЛ/ФЦ" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnBranchType"
                                    Binding="{Binding Model.BranchType, Converter={StaticResource BranchTypeToStringConverter}}"/>
                <DataGridTextColumn Header="Заказчик" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCustomer"
                                    Binding="{Binding Model.CustomerName}"/>
                <DataGridTextColumn Header="Пациент" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnPatient"
                                    Binding="{Binding Model.PatientFnp}"/>
                <DataGridTextColumn Header="Доктор/техник" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnDoctor"
                                    Binding="{Binding Model.DoctorFullName}"/>
                <DataGridTextColumn Header="Создатель" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCreator"
                                    Binding="{Binding Model.CreatorFullName}"/>
                <DataGridTextColumn Header="Статус" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnStatus"
                                    Binding="{Binding Model.Status, Converter={StaticResource OrderStatusToStringConverter}}"/>
                <DataGridTextColumn Header="Блокировка" ElementStyle="{StaticResource DataGridTextBlockStyle}" MinWidth="100" Width="100"
                                    helpers:DataGridColumnNameHelper.Name="General_LockInfo"
                                    Binding="{Binding LockInfo}"/>
                <DataGridTextColumn Header="Закрыт" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnClosed"
                                    Binding="{Binding Model.Closed, StringFormat='dd.MM.yyyy HH:mm'}"/>
            </DataGrid.Columns>
        </DataGrid>

        <controls:BusyIndicator Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                                Width="50" Height="50" Fill="#2D2D2D" IsBusy="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}"/>

        <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" Margin="0,3,0,0">
            <TextBlock Text="Записей:"/>
            <TextBlock Text="{Binding Orders.Count}" Margin="3,0,0,0"/>
        </StackPanel>
    </Grid>
</Window>
