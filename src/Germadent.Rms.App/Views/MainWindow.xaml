<Window x:Class="Germadent.Rms.App.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:helpers="clr-namespace:Germadent.UI.Helpers;assembly=Germadent.UI"
        xmlns:viewModels="clr-namespace:Germadent.Client.Common.ViewModels;assembly=Germadent.Client.Common"
        xmlns:controls="clr-namespace:Germadent.UI.Controls;assembly=Germadent.UI"
        xmlns:designMock="clr-namespace:Germadent.Rms.App.Views.DesignMock"
        xmlns:model="clr-namespace:Germadent.Model;assembly=Germadent.Model"
        mc:Ignorable="d"
        Title="{Binding Title}" 
        MinWidth="1024"
        Width="1400"
        MinHeight="600"
        Height="900"
        WindowStartupLocation="CenterScreen" 
        Background="{x:Static SystemColors.ControlBrush}"
        DataContextChanged="MainWindow_OnDataContextChanged"
        d:DataContext="{d:DesignInstance Type=designMock:DesignMockMainViewModel, IsDesignTimeCreatable=True}"
        FocusManager.FocusedElement="{Binding ElementName=SearchComboBox}">
    <Grid Margin="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Vertical">
            <controls:SearchComboBox x:Name="SearchComboBox" Height="23" Margin="0,0,0,0"
                                     LabelText="Поиск заказ-нарядов" 
                                     SearchEventTimeDelay="00:00:3"
                                     SearchText="{Binding SearchString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="Работа с заказ-нарядами" VerticalAlignment="Center" Margin="0,24,0,0" FontSize="10"/>

            <Button Content="Взять в работу З-Н" Margin="0,6,0,0"
                    Command="{Binding BeginWorkByWorkOrderCommand}"/>
            <Button Content="Закончить работы по З-Н" Margin="0,6,0,0"
                    Command="{Binding FinishWorkByWorkOrderCommand}"/>
            <Button Content="Подтвердить прохождение контроля" Margin="0,6,0,0"
                    Visibility="{Binding CanQualityControl, Converter={StaticResource BoolToVisibilityConverter}}"
                    Command="{Binding RealizeWorkOrderCommand}"/>
            <Button Content="Распечатать З-Н" Margin="0,6,0,0"
                    Command="{Binding PrintOrderCommand}"/>
            <Button Content="Настроить фильтр" Margin="0,6,0,0"
                    Command="{Binding FilterOrdersCommand}"/>
        </StackPanel>

        <DataGrid x:Name="OrdersGrid" Grid.Column="1" Grid.Row="0" Margin="6,0,0,0"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  EnableColumnVirtualization="True"
                  EnableRowVirtualization="True"
                  CanUserDeleteRows="False"
                  CanUserAddRows="False"
                  CanUserReorderColumns="True"
                  CanUserResizeColumns="True"
                  CanUserResizeRows="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"	
                  AlternationCount="2"
                  IsReadOnly="True"
                  ItemsSource="{Binding Orders}"
                  SelectedItem="{Binding SelectedOrder}"
                  SelectionChanged="OrdersGrid_OnSelectionChanged">
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding BeginWorkByWorkOrderCommand}"
                            Key="Enter"/>
                <KeyBinding Command="{Binding PrintOrderCommand}"
                            Key="P" Modifiers="Control"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource DataGridRowStyle}"
                       d:DataContext="{d:DesignInstance Type=viewModels:OrderLiteViewModel, IsDesignTimeCreatable=True}">
                    <EventSetter Event="PreviewMouseDoubleClick" Handler="OnOrderRowDoubleClick"/>
                    <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=DataContext}"/>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.Tag}">
                                <MenuItem Header="Взять в работу" FontWeight="Bold" 
                                          Command="{Binding BeginWorkByWorkOrderCommand}"
                                          InputGestureText="Enter"/>
                                <MenuItem Header="Закончить работы"
                                          Command="{Binding FinishWorkByWorkOrderCommand}"/>
                                <MenuItem Header="Подтвердить прохождение контроля"
                                          Command="{Binding RealizeWorkOrderCommand}"/>
                                <Separator/>
                                <MenuItem Header="Распечатать" 
                                          Command="{Binding PrintOrderCommand}"
                                          InputGestureText="Ctrl+P"/>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLocked}" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock>
                                        <Run Text="Заказ-наряд заблокировал пользователь"/>
                                        <Run Text="{Binding LockedBy.FullName, Mode=OneWay}"
                                             FontWeight="SemiBold"/>
                                    </TextBlock>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsClosed}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="LightGray"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsClosed}" Value="True">
                            <Setter Property="ToolTip" Value="Данный заказ наряд закрыт, его можно открыть на просмотр или распечатать"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="Auto" 
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnIdentifier"
                                    Binding="{Binding WorkOrderId}"/>
                <DataGridTemplateColumn Header="№" Width="Auto" 
                                        helpers:DataGridColumnNameHelper.Name="General_ColumnDocNumber">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border CornerRadius="2" Margin="3">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.InProgress}">
                                                <Setter Property="Background" Value="ForestGreen"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.QualityControl}">
                                                <Setter Property="Background" Value="Yellow"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.Realization}">
                                                <Setter Property="Background" Value="DeepSkyBlue"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock Text="{Binding DocNumber}" Margin="3,1,3,1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataGridTextBlockStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.InProgress}">
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=Background, Converter={StaticResource ReadableColorConverter}}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.QualityControl}">
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=Background, Converter={StaticResource ReadableColorConverter}}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding  Status}" Value="{x:Static model:OrderStatus.Realization}">
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=Background, Converter={StaticResource ReadableColorConverter}}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Дата создания" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCreated"
                                    Binding="{Binding Created, StringFormat='dd.MM.yyyy HH:mm'}"/>
                <DataGridTextColumn Header="ЗТЛ/ФЦ" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnBranchType"
                                    Binding="{Binding BranchType, Converter={StaticResource BranchTypeToStringConverter}}"/>
                <DataGridTextColumn Header="Заказчик" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCustomer"
                                    Binding="{Binding CustomerName}"/>
                <DataGridTextColumn Header="Пациент" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnPatient"
                                    Binding="{Binding PatientFullName}"/>
                <DataGridTextColumn Header="Доктор/техник" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnDoctor"
                                    Binding="{Binding DoctorFullName}"/>
                <DataGridTextColumn Header="Создатель" ElementStyle="{StaticResource DataGridTextBlockStyle}"  Width="Auto"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnCreator"
                                    Binding="{Binding CreatorFullName}"/>
                <DataGridTextColumn Header="Статус" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnStatus"
                                    Binding="{Binding Status, Converter={StaticResource OrderStatusToStringConverter}}"/>
                <DataGridTextColumn Header="Статус изменён" ElementStyle="{StaticResource DataGridTextBlockStyle}" Width="*"
                                    helpers:DataGridColumnNameHelper.Name="General_ColumnStatusChanged"
                                    Binding="{Binding StatusChanged, StringFormat='dd.MM.yyyy HH:mm'}"/>
                <DataGridTextColumn Header="Блокировка" ElementStyle="{StaticResource DataGridTextBlockStyle}" MinWidth="100" Width="100"
                                    helpers:DataGridColumnNameHelper.Name="General_LockInfo"
                                    Binding="{Binding LockInfo}"/>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Window>
